package core.utils{	import core.actions.log;
		public final class ObjectUtils  {    		public static function copyObject(sourceObject:Object):Object		{			var tempObject:Object = new Object();						for (var propertyKey:* in sourceObject)      {				tempObject[propertyKey] = sourceObject[propertyKey];			}							return tempObject;		}								public static function merge(objects:Array):Object		{			var object:Object = {};			var o:Object;			var key:String;						for each (o in objects)			{				for (key in o) object[key] = o[key];			}						return object;		}						public static function deepTrace(object:Object, level:int = 0):void		{			var tabs:String = "";			for (var i:int = 0 ; i < level ; i++) tabs += "\t";		 			for (var key:String in object )      {				core.actions.log(tabs + "[" + key + "] -> " + object[key]);				deepTrace(object[key], level + 1);			}		}							}}