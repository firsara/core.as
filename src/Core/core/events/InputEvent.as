package core.events{	import core.settings.InputSetup;		import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TouchEvent;	import flash.ui.MultitouchInputMode;		public dynamic class InputEvent extends Event	{    		public static function get INPUT_DOWN():String {			return (isTouch ? 'touchBegin' : MouseEvent.MOUSE_DOWN);			//return (isTouch ? TouchEvent.TOUCH_BEGIN : MouseEvent.MOUSE_DOWN);		}				public static function get INPUT_UP():String {			return (isTouch ? 'touchEnd' : MouseEvent.MOUSE_UP);			//return (isTouch ? TouchEvent.TOUCH_END : MouseEvent.MOUSE_UP);		}				public static function get INPUT_MOVE():String {			return (isTouch ? 'touchMove' : MouseEvent.MOUSE_MOVE);			//return (isTouch ? TouchEvent.TOUCH_MOVE : MouseEvent.MOUSE_MOVE);		}				public static function get INPUT_OVER():String {			return (isTouch ? 'touchRollOver' : MouseEvent.ROLL_OVER);			//return (isTouch ? TouchEvent.TOUCH_ROLL_OVER : MouseEvent.ROLL_OVER);		}				public static function get INPUT_OUT():String {			return (isTouch ? 'touchRollOut' : MouseEvent.ROLL_OUT);			//return (isTouch ? TouchEvent.TOUCH_ROLL_OUT : MouseEvent.ROLL_OUT);		}				public static function get INPUT_CLICK():String {			return (isTouch ? 'touchTap' : MouseEvent.CLICK);			//return (isTouch ? TouchEvent.TOUCH_TAP : MouseEvent.CLICK);		}				public static function get DOUBLE_CLICK():String {			return MouseEvent.DOUBLE_CLICK;		}		        public function get isTouch():Boolean    {      return (this.type.toLowerCase().indexOf('touch') >= 0);    }        		public function InputEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false)		{			super(type, bubbles, cancelable);		}										private static function get isTouch():Boolean		{			//return (InputSetup.inputMode == MultitouchInputMode.TOUCH_POINT);			return (InputSetup.inputMode == 'touchPoint');		}					}}