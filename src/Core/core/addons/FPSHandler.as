package core.addons{	import core.Core;	import core.actions.log;	import core.events.CoreEvent;		import flash.events.Event;	import flash.utils.getTimer;	import flash.utils.setTimeout;
		//[ExcludeClass]	final public class FPSHandler	{		include '../_inc_/StaticRequire.as';		private static var         _instance :FPSHandler;		public static function get instance():FPSHandler { return _instance; }						private static var _interval:int = 1000;		private static var _updateInterval:int = 2;		private static var _targetFPS:int = 30;				private var _last:int;		private var _ticks:int;		private var _updates:int;		private var _fps:Number;		private var _frameRate:Number;        private var _now:int;    private var _difference:int;						public function get frameRate():int { return _fps; }		public function set update(value:int):void   { _interval = value; }		public function set target(value:int):void   { _targetFPS = value; }								public function FPSHandler()		{			include '../_inc_/StaticRequireValidation.as';			_instance = this;						if (Core.ready) setup();			else Core.addEventListener(CoreEvent.CORE_READY, setup);		}				private function setup(e:CoreEvent = null):void		{			if (e) Core.removeEventListener(CoreEvent.CORE_READY, setup);						_instance = this;			_targetFPS = Core.stage.frameRate;			setTimeout(start, _interval);		}				private function start():void		{			_last = getTimer();			_ticks = 0;			_updates = int(_updateInterval / 2);						Core.stage.frameRate = 100;			Core.stage.addEventListener(Event.ENTER_FRAME, tick);		}		private function tick(event:Event):void		{			_ticks++;      			      _now = getTimer();      _difference = _now - _last;						if (_difference >= _interval)			{				_fps = _ticks / _difference * 1000;				_frameRate = int(_targetFPS - (_targetFPS - _fps) / 2);				//_frameRate = Math.min(_targetFPS, int(_fps) + 2);								_ticks = 0;				_last = _now;								_updates++;								if (_updates > _updateInterval)				{					Core.stage.frameRate = _frameRate;					_updates = 0;										if (Core.config.debug) core.actions.log(_fps.toFixed(1) + " fps  |  Frame Rate -> " + _frameRate, this);				}			}					}					}}